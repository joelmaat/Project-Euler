package main

import "fmt"
import "math"

/*
Even Fibonacci numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the
first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
even-valued terms.

http://projecteuler.net/problem=2
*/

func FibonacciSum(maximum int) int {
	total := 0
	multiplier := (math.Sqrt(5) + 1) / 2
	value := 1
	for value < maximum {
		if value&1 == 0 {
			total += value
		}
		value = int(float64(value) * multiplier + 0.5)
	}
	return total
}

func main() {
	fmt.Printf("%d", FibonacciSum(4000000))
}
